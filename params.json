{"name":"Python mcl","tagline":"markov cluster algorithm - python","body":"# MCL algorithm\r\n\r\nThis module implements the Markov Cluster algorithm created by Stijn van Dongen and \r\ndescribed in http://www.library.uu.nl/digiarchief/dip/diss/1895620/inhoud.htm.\r\n\r\nThis implementation is not yet optimized for large networks.\r\n\r\n![example] (example.png)\r\n\r\n\r\n##Installation\r\n\r\npython setup.py install\r\n\r\n##Usage\r\n\r\n###Command line\r\n\r\n    Usage: mcl_clustering.py [options] <input_matrix>\r\n\r\n    Options\r\n      -h, --help            show this help message and exit\r\n      -e EXPAND_FACTOR, --expand_factor=EXPAND_FACTOR\r\n                            expand factor (default: 2)\r\n      -i INFLATE_FACTOR, --inflate_factor=INFLATE_FACTOR\r\n                            inflate factor (default: 2)\r\n      -m MULT_FACTOR, --mult_factor=MULT_FACTOR\r\n                            multiply factor (default: 2)\r\n      -l MAX_LOOP, --max_loops=MAX_LOOP\r\n                            max loops (default: 60)\r\n      -o FILE, --output=FILE\r\n                            output (default: stdout)\r\n      -v, --verbose         verbose (default: True)\r\n      -d, --draw-graph      show graph with networkx (default: False)\r\n\r\n\r\nThe input matrix must be as comma-separated value file representing the \r\nadjacency matrix. \r\n\r\nAn example is the file example.csv in examples dir.\r\n\r\ntry: \r\n    mcl_clustering.py -d -e 3 <example_path>/example.csv\r\n\r\n\r\n###Code\r\n        \r\n####Using numpy adjacency matrix\r\n\r\n    from mcl_clustering import mcl\r\n\r\n    A = <your matrix>\r\n\r\n    M, clusters = mcl(A, expand_factor = <expand_factor>,\r\n                       inflate_factor = <inflate_factor>,\r\n                       max_loop = <max_loop>,\r\n                       mult_factor = <mult_factor>)\r\n\r\n####Using a networkx graph\r\n\r\n    from mcl_clustering import networkx_mcl\r\n\r\n    G = <your graph>\r\n\r\n    M, clusters = networkx_mcl(G, expand_factor = <expand_factor>,\r\n                       inflate_factor = <inflate_factor>,\r\n                       max_loop = <max_loop>,\r\n                       mult_factor = <mult_factor>)\r\n\r\n    \r\n    Output\r\n        M = otuput matrix\r\n        clusters = dict with keys = [<cluster id>] values = [<vertex id>]\r\n\r\n##Requirements\r\n    \r\n    numpy\r\n    networkx\r\n\r\n\r\n##References\r\n\r\n* [1]   Stijn van Dongen, Graph Clustering by Flow Simulation.\r\n      PhD thesis, University of Utrecht, May 2000.\r\n      ( http://www.library.uu.nl/digiarchief/dip/diss/1895620/inhoud.htm )\r\n\r\n* [2]   Stijn van Dongen. A cluster algorithm for graphs.  Technical Report\r\n      INS-R0010, National Research Institute for Mathematics and Computer\r\n      Science in the Netherlands, Amsterdam, May 2000.\r\n      ( http://www.cwi.nl/ftp/CWIreports/INS/INS-R0010.ps.Z )\r\n\r\n\r\n# license\r\n\r\nMIT\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}